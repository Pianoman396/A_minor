<?php abspath_check("ABSPATH"); require_once vc_path_dir( "SHORTCODES_DIR", "vc-single-image.php" );

class WPBakeryShortCode_VC_meething_place extends WPBakeryShortCode {}

	function vs_meething_place_output($atts, $content=null){
		 extract(
		 	shortcode_atts(
        		array(
        		  "el_class" => "",
        		  "images" => "",
        		  "image_size" => "full",
        		  "grid_type" => "2x2",
        		), $atts
     	 	)
    	 );

    	 $output = do_shortcode($content);
   		 $images_ids = $images !== "" ? explode(",",trim($images)) : null;

   		 if($images_ids):
   		   // Creating an alphabet array
   		   $alphabet = range("A","Z"); $i = 0; // iterator

   		   // Setting image attributes array
   		   $img_atts = [
   		     "class" => "attachment-thumbnail",
   		     "src"   => vc_asset_url( "vc/blank.gif" )
   		   ];

   		   $output .= "<ul class='". esc_attr($el_class) ." oo_grid--type--". esc_attr($grid_type) ."' data-name=''>";

   		   foreach ( $images_ids as $image_id ):
   		     $img = wp_get_attachment_image($image_id, $image_size, $img_atts);

   		     $output .= "<li><input type='checkbox' class='img_check'><span class='custom--checkbox'></span><span 		class='custom--checkbox--letter'> " . $alphabet[$i] . " </span>". $img ."</li>"; $i++;
   		   endforeach;

   		   $output .= "</ul>";

   		 endif;

   		 return $output;
	}
	add_shortcode( "vs_meething_place", "vs_meething_place_output");

	function vc_meething_place_mapping() {
		if ( !defined( 'WPB_VC_VERSION' ) ) {
            return;
        }

        // Map the block with vc_map()
        vc_map(
          array(
            'name' => __('VC Meething Place', 'bridge-child'),
            'base' => 'vc_meething_place',
            'description' => __('Description', 'bridge-child'),
            'content_element' => true,
            'show_settings_on_create' => true,
            'category' => __('Custom VC Elements', 'bridge-child'),
            'params' => array(/*

              */array(
                "type" => "attach_images",
                "class" => "",
                "heading" => __("Select Images", "bridge-child" ),
                "param_name" => "images",
                "description" => __( "Selecting images for output", "bridge-child" ),
                'value' => __( "", 'bridge-child' ),
              ),/*

              */array(
                  'type' => 'textfield',
                  'heading' => __('Extra class name', 'bridge-child'),
                  'param_name' => 'el_class',
                  'description' => __('If you wish to style particular content element differently, then use this field to add a class name and then refer to it in your css file.', 'bridge-child')
              ),/*

              */array(
                "type" => "textfield",
                "heading" => "Image size",
                "param_name" => "image_size",
                "description" => "set image size",
                ),/*

              */array(
                "type" => "dropdown",
                "class" => "",
                "heading" => __( "Grid Type", "bridge-child" ),
                "param_name" => "grid_type",
                "description" => __( "Select the grid type from available options above", "bridge-child" ),
                'value' => __( ['2x2', '3x3', '4x4', '5x5'], 'bridge-child'),
              ),
            )
          )
        );
	}
	add_action("init","vc_meething_place_mapping");